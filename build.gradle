plugins {
  id "groovy"
}

group = "consilio"   // example: com.disney.dss.dpe
version = "1.0.0" // example: 1.0.0

// group = "<package>"   // example: com.disney.dss.dpe
// version = "<version>" // example: 1.0.0

repositories {
  jcenter()
    maven {
     url 'http://repository.apache.org/snapshots/'
     url 'https://repo.jenkins-ci.org/releases/'
  }
}

dependencies {
  testImplementation "com.lesfurets:jenkins-pipeline-unit:1.3"
  implementation "org.codehaus.groovy:groovy-all:2.5.4"
  // testCompile "com.lesfurets:jenkins-pipeline-unit:1.1"
  testImplementation "junit:junit:4.12"
}

sourceSets {
  main {
    groovy {
      // all code files will be in either of the folders
      srcDirs = ['src', 'vars'] 
    }
  }

  test {
    groovy {
      srcDir 'test'
    }
  }
}

test {
  // delete old test reports
  dependsOn cleanTest

  // don't stop if tests fail
  ignoreFailures = true

  // minimize logging
  testLogging.maxGranularity = 0

  // show stdout from tests
  onOutput { dest, event -> print event.message }

  // show test results
  def results = []
  afterTest { desc, result ->
    println "${desc.className.split("\\.")[-1]}: " +
      "${desc.name}: ${result.resultType}"
  }
  afterSuite { desc, result ->
    if (desc.className) { results << result }
  }

  // show summary
  doLast {
    println "Tests: ${results.sum { it.testCount }}" +
      ", Failures: ${results.sum { it.failedTestCount }}" +
      ", Errors: ${results.sum { it.exceptions.size() }}" + 
      ", Skipped: ${results.sum { it.skippedTestCount }}" 
  }
}